name: Build and Push Docker Image

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: matty87a/emby-stdout

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PAT }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=ref,event=tag
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src
        file: ./src/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Generate GitHub Summary Report
      if: always()
      run: |
        {
          echo "# 🐳 Docker Image Build and Push Report"
          echo ""
          echo "## 📊 Build Results"
          echo ""
          
          # Build summary
          echo "### 🏗️ Build Information"
          echo "- **Image Name**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`"
          echo "- **Platform**: linux/amd64"
          echo "- **Registry**: ${{ env.REGISTRY }}"
          echo "- **Build Trigger**: ${{ github.event_name }}"
          echo "- **Tag**: \`${{ github.ref_name }}\`"
          echo "- **Commit**: \`${{ github.sha }}\`"
          echo ""
          
          # Tags information
          echo "### 🏷️ Image Tags"
          echo "\`\`\`"
          echo "${{ steps.meta.outputs.tags }}"
          echo "\`\`\`"
          echo ""
          
          # Build status
          echo "### ✅ Build Status"
          if [ "${{ job.status }}" = "success" ]; then
            echo "- ✅ **Build**: Successful"
            echo "- ✅ **Push**: Completed"
            echo "- ✅ **Cache**: Updated"
            echo ""
            echo "🎉 **Image successfully built and pushed to Docker Hub!**"
            echo ""
            echo "### 📥 Pull Command"
            echo "\`\`\`bash"
            echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
            echo "\`\`\`"
          else
            echo "- ❌ **Build**: Failed"
            echo "- ❌ **Push**: Not completed"
            echo ""
            echo "⚠️ **Build failed!** Please check the logs above for details."
          fi
          echo ""
          
          # Dockerfile info
          echo "### 📄 Dockerfile Information"
          echo "- **Base Image**: \`emby/embyserver:latest\`"
          echo "- **Architecture**: ARM64 (emulated on x86 runners)"
          echo "- **Custom Scripts**:"
          echo "  - \`tail-logs.sh\` - Log tailing functionality"
          echo "  - \`emby-run-with-logs.sh\` - Custom startup script"
          echo ""
          
          # Next steps
          echo "### 🔧 Next Steps"
          if [ "${{ job.status }}" = "success" ]; then
            echo "1. **Pull the image**: \`docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`"
            echo "2. **Run the container**: Use your docker-compose.yaml with the new image"
            echo "3. **Verify functionality**: Check that log tailing works as expected"
            echo "4. **Monitor**: Watch for any issues in production"
          else
            echo "1. Review the build logs above"
            echo "2. Check Dockerfile syntax and dependencies"
            echo "3. Verify Docker Hub credentials and permissions"
            echo "4. Re-run the workflow after fixes"
          fi
        } >> $GITHUB_STEP_SUMMARY
